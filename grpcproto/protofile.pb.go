// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpcproto/protofile.proto

package grpcproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Candidate struct {
	CandidateID          string         `protobuf:"bytes,1,opt,name=CandidateID,json=candidateID,proto3" json:"CandidateID,omitempty"`
	CandidateName        string         `protobuf:"bytes,2,opt,name=CandidateName,json=candidateName,proto3" json:"CandidateName,omitempty"`
	EligibilityList      []*Eligibility `protobuf:"bytes,3,rep,name=EligibilityList,json=eligibilityList,proto3" json:"EligibilityList,omitempty"`
	TestResultList       []*TestResult  `protobuf:"bytes,4,rep,name=TestResultList,json=testResultList,proto3" json:"TestResultList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Candidate) Reset()         { *m = Candidate{} }
func (m *Candidate) String() string { return proto.CompactTextString(m) }
func (*Candidate) ProtoMessage()    {}
func (*Candidate) Descriptor() ([]byte, []int) {
	return fileDescriptor_protofile_32d3f9170a831234, []int{0}
}
func (m *Candidate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candidate.Unmarshal(m, b)
}
func (m *Candidate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candidate.Marshal(b, m, deterministic)
}
func (dst *Candidate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candidate.Merge(dst, src)
}
func (m *Candidate) XXX_Size() int {
	return xxx_messageInfo_Candidate.Size(m)
}
func (m *Candidate) XXX_DiscardUnknown() {
	xxx_messageInfo_Candidate.DiscardUnknown(m)
}

var xxx_messageInfo_Candidate proto.InternalMessageInfo

func (m *Candidate) GetCandidateID() string {
	if m != nil {
		return m.CandidateID
	}
	return ""
}

func (m *Candidate) GetCandidateName() string {
	if m != nil {
		return m.CandidateName
	}
	return ""
}

func (m *Candidate) GetEligibilityList() []*Eligibility {
	if m != nil {
		return m.EligibilityList
	}
	return nil
}

func (m *Candidate) GetTestResultList() []*TestResult {
	if m != nil {
		return m.TestResultList
	}
	return nil
}

type Eligibility struct {
	EligibilityID        string   `protobuf:"bytes,1,opt,name=EligibilityID,json=eligibilityID,proto3" json:"EligibilityID,omitempty"`
	EligibilityLevel     string   `protobuf:"bytes,2,opt,name=EligibilityLevel,json=eligibilityLevel,proto3" json:"EligibilityLevel,omitempty"`
	TestIDList           []string `protobuf:"bytes,3,rep,name=TestIDList,json=testIDList,proto3" json:"TestIDList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Eligibility) Reset()         { *m = Eligibility{} }
func (m *Eligibility) String() string { return proto.CompactTextString(m) }
func (*Eligibility) ProtoMessage()    {}
func (*Eligibility) Descriptor() ([]byte, []int) {
	return fileDescriptor_protofile_32d3f9170a831234, []int{1}
}
func (m *Eligibility) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Eligibility.Unmarshal(m, b)
}
func (m *Eligibility) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Eligibility.Marshal(b, m, deterministic)
}
func (dst *Eligibility) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Eligibility.Merge(dst, src)
}
func (m *Eligibility) XXX_Size() int {
	return xxx_messageInfo_Eligibility.Size(m)
}
func (m *Eligibility) XXX_DiscardUnknown() {
	xxx_messageInfo_Eligibility.DiscardUnknown(m)
}

var xxx_messageInfo_Eligibility proto.InternalMessageInfo

func (m *Eligibility) GetEligibilityID() string {
	if m != nil {
		return m.EligibilityID
	}
	return ""
}

func (m *Eligibility) GetEligibilityLevel() string {
	if m != nil {
		return m.EligibilityLevel
	}
	return ""
}

func (m *Eligibility) GetTestIDList() []string {
	if m != nil {
		return m.TestIDList
	}
	return nil
}

type User struct {
	UserName             string   `protobuf:"bytes,1,opt,name=UserName,json=userName,proto3" json:"UserName,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=Password,json=password,proto3" json:"Password,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=Type,json=type,proto3" json:"Type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_protofile_32d3f9170a831234, []int{2}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type UserCreateResponse struct {
	UserID               string   `protobuf:"bytes,1,opt,name=UserID,json=userID,proto3" json:"UserID,omitempty"`
	Status               bool     `protobuf:"varint,2,opt,name=Status,json=status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserCreateResponse) Reset()         { *m = UserCreateResponse{} }
func (m *UserCreateResponse) String() string { return proto.CompactTextString(m) }
func (*UserCreateResponse) ProtoMessage()    {}
func (*UserCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_protofile_32d3f9170a831234, []int{3}
}
func (m *UserCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserCreateResponse.Unmarshal(m, b)
}
func (m *UserCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserCreateResponse.Marshal(b, m, deterministic)
}
func (dst *UserCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCreateResponse.Merge(dst, src)
}
func (m *UserCreateResponse) XXX_Size() int {
	return xxx_messageInfo_UserCreateResponse.Size(m)
}
func (m *UserCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserCreateResponse proto.InternalMessageInfo

func (m *UserCreateResponse) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *UserCreateResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type TestResult struct {
	CategoryID           string   `protobuf:"bytes,1,opt,name=CategoryID,json=categoryID,proto3" json:"CategoryID,omitempty"`
	TestID               string   `protobuf:"bytes,2,opt,name=TestID,json=testID,proto3" json:"TestID,omitempty"`
	Result               string   `protobuf:"bytes,3,opt,name=Result,json=result,proto3" json:"Result,omitempty"`
	Score                string   `protobuf:"bytes,4,opt,name=Score,json=score,proto3" json:"Score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestResult) Reset()         { *m = TestResult{} }
func (m *TestResult) String() string { return proto.CompactTextString(m) }
func (*TestResult) ProtoMessage()    {}
func (*TestResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_protofile_32d3f9170a831234, []int{4}
}
func (m *TestResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResult.Unmarshal(m, b)
}
func (m *TestResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResult.Marshal(b, m, deterministic)
}
func (dst *TestResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResult.Merge(dst, src)
}
func (m *TestResult) XXX_Size() int {
	return xxx_messageInfo_TestResult.Size(m)
}
func (m *TestResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResult.DiscardUnknown(m)
}

var xxx_messageInfo_TestResult proto.InternalMessageInfo

func (m *TestResult) GetCategoryID() string {
	if m != nil {
		return m.CategoryID
	}
	return ""
}

func (m *TestResult) GetTestID() string {
	if m != nil {
		return m.TestID
	}
	return ""
}

func (m *TestResult) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *TestResult) GetScore() string {
	if m != nil {
		return m.Score
	}
	return ""
}

type CandidateCreateResponse struct {
	CandidateID          string   `protobuf:"bytes,1,opt,name=CandidateID,json=candidateID,proto3" json:"CandidateID,omitempty"`
	Status               bool     `protobuf:"varint,2,opt,name=Status,json=status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CandidateCreateResponse) Reset()         { *m = CandidateCreateResponse{} }
func (m *CandidateCreateResponse) String() string { return proto.CompactTextString(m) }
func (*CandidateCreateResponse) ProtoMessage()    {}
func (*CandidateCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_protofile_32d3f9170a831234, []int{5}
}
func (m *CandidateCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandidateCreateResponse.Unmarshal(m, b)
}
func (m *CandidateCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandidateCreateResponse.Marshal(b, m, deterministic)
}
func (dst *CandidateCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandidateCreateResponse.Merge(dst, src)
}
func (m *CandidateCreateResponse) XXX_Size() int {
	return xxx_messageInfo_CandidateCreateResponse.Size(m)
}
func (m *CandidateCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CandidateCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CandidateCreateResponse proto.InternalMessageInfo

func (m *CandidateCreateResponse) GetCandidateID() string {
	if m != nil {
		return m.CandidateID
	}
	return ""
}

func (m *CandidateCreateResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func init() {
	proto.RegisterType((*Candidate)(nil), "grpcproto.Candidate")
	proto.RegisterType((*Eligibility)(nil), "grpcproto.Eligibility")
	proto.RegisterType((*User)(nil), "grpcproto.User")
	proto.RegisterType((*UserCreateResponse)(nil), "grpcproto.UserCreateResponse")
	proto.RegisterType((*TestResult)(nil), "grpcproto.TestResult")
	proto.RegisterType((*CandidateCreateResponse)(nil), "grpcproto.CandidateCreateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	CreateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*UserCreateResponse, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) CreateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*UserCreateResponse, error) {
	out := new(UserCreateResponse)
	err := c.cc.Invoke(ctx, "/grpcproto.UserService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	CreateUser(context.Context, *User) (*UserCreateResponse, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.UserService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcproto.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _UserService_CreateUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpcproto/protofile.proto",
}

// CandidateServiceClient is the client API for CandidateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CandidateServiceClient interface {
	CreateCandidate(ctx context.Context, in *Candidate, opts ...grpc.CallOption) (*CandidateCreateResponse, error)
}

type candidateServiceClient struct {
	cc *grpc.ClientConn
}

func NewCandidateServiceClient(cc *grpc.ClientConn) CandidateServiceClient {
	return &candidateServiceClient{cc}
}

func (c *candidateServiceClient) CreateCandidate(ctx context.Context, in *Candidate, opts ...grpc.CallOption) (*CandidateCreateResponse, error) {
	out := new(CandidateCreateResponse)
	err := c.cc.Invoke(ctx, "/grpcproto.CandidateService/CreateCandidate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CandidateServiceServer is the server API for CandidateService service.
type CandidateServiceServer interface {
	CreateCandidate(context.Context, *Candidate) (*CandidateCreateResponse, error)
}

func RegisterCandidateServiceServer(s *grpc.Server, srv CandidateServiceServer) {
	s.RegisterService(&_CandidateService_serviceDesc, srv)
}

func _CandidateService_CreateCandidate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Candidate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CandidateServiceServer).CreateCandidate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.CandidateService/CreateCandidate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CandidateServiceServer).CreateCandidate(ctx, req.(*Candidate))
	}
	return interceptor(ctx, in, info, handler)
}

var _CandidateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcproto.CandidateService",
	HandlerType: (*CandidateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCandidate",
			Handler:    _CandidateService_CreateCandidate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpcproto/protofile.proto",
}

func init() {
	proto.RegisterFile("grpcproto/protofile.proto", fileDescriptor_protofile_32d3f9170a831234)
}

var fileDescriptor_protofile_32d3f9170a831234 = []byte{
	// 420 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0x51, 0xeb, 0xd3, 0x30,
	0x14, 0xc5, 0x99, 0xeb, 0xbf, 0xb4, 0xb7, 0x6c, 0x1d, 0x61, 0xce, 0x3a, 0x50, 0x46, 0xf1, 0x61,
	0xf8, 0x30, 0x61, 0xbe, 0x2a, 0x08, 0x9b, 0x0f, 0x63, 0x22, 0x92, 0xce, 0x67, 0xe9, 0xba, 0xeb,
	0x08, 0xd4, 0xb5, 0x24, 0xe9, 0x64, 0x4f, 0x7e, 0x49, 0x3f, 0x90, 0x24, 0xa9, 0x69, 0x3a, 0x94,
	0xff, 0x4b, 0xdb, 0xfb, 0xcb, 0xe5, 0xdc, 0x73, 0x2e, 0x29, 0x3c, 0x3f, 0xf3, 0xba, 0xa8, 0x79,
	0x25, 0xab, 0x37, 0xfa, 0xf9, 0x9d, 0x95, 0xb8, 0xd2, 0x5f, 0x24, 0xb4, 0x47, 0xe9, 0xef, 0x01,
	0x84, 0x9b, 0xfc, 0x72, 0x62, 0xa7, 0x5c, 0x22, 0x59, 0x40, 0x64, 0x8b, 0xdd, 0x36, 0x19, 0x2c,
	0x06, 0xcb, 0x90, 0x46, 0x45, 0x87, 0xc8, 0x2b, 0x18, 0xd9, 0x8e, 0xcf, 0xf9, 0x0f, 0x4c, 0x9e,
	0xe8, 0x9e, 0x51, 0xe1, 0x42, 0xf2, 0x01, 0xe2, 0x8f, 0x25, 0x3b, 0xb3, 0x23, 0x2b, 0x99, 0xbc,
	0x7d, 0x62, 0x42, 0x26, 0xc3, 0xc5, 0x70, 0x19, 0xad, 0x67, 0x2b, 0x3b, 0x7a, 0xe5, 0x74, 0xd0,
	0x18, 0xfb, 0xed, 0xe4, 0x3d, 0x8c, 0x0f, 0x28, 0x24, 0x45, 0xd1, 0x94, 0x52, 0x0b, 0x78, 0x5a,
	0xe0, 0xa9, 0x23, 0xd0, 0x35, 0xd0, 0xb1, 0xec, 0x35, 0xa7, 0xbf, 0x20, 0x72, 0xe4, 0x95, 0x6b,
	0xa7, 0xb4, 0xc9, 0x46, 0xe8, 0x42, 0xf2, 0x1a, 0x26, 0xae, 0x6b, 0xbc, 0x62, 0xd9, 0xc6, 0x9b,
	0xe0, 0x1d, 0x27, 0x2f, 0x01, 0xd4, 0xf8, 0xdd, 0xd6, 0x86, 0x0b, 0x29, 0x48, 0x4b, 0x52, 0x0a,
	0xde, 0x57, 0x81, 0x9c, 0xcc, 0x21, 0x50, 0x6f, 0xbd, 0x2a, 0x33, 0x34, 0x68, 0xda, 0x5a, 0x9d,
	0x7d, 0xc9, 0x85, 0xf8, 0x59, 0xf1, 0x53, 0x3b, 0x27, 0xa8, 0xdb, 0x9a, 0x10, 0xf0, 0x0e, 0xb7,
	0x1a, 0x93, 0xa1, 0xe6, 0x9e, 0xbc, 0xd5, 0x98, 0x6e, 0x81, 0x28, 0xad, 0x0d, 0xc7, 0x5c, 0x22,
	0x45, 0x51, 0x57, 0x17, 0x81, 0x64, 0x06, 0xbe, 0xa2, 0x36, 0x94, 0xdf, 0xe8, 0x4a, 0xf1, 0x4c,
	0xe6, 0xb2, 0x11, 0x5a, 0x3b, 0xa0, 0xbe, 0xd0, 0x55, 0xca, 0x8d, 0x73, 0xb3, 0x2c, 0x95, 0x63,
	0x93, 0x4b, 0x3c, 0x57, 0xbc, 0x5b, 0x0b, 0x14, 0x96, 0x28, 0x15, 0x93, 0xb3, 0x75, 0xe8, 0x9b,
	0x8c, 0x8a, 0x1b, 0x85, 0xd6, 0xa1, 0xcf, 0x8d, 0xde, 0x14, 0x1e, 0xb2, 0xa2, 0xe2, 0x98, 0x78,
	0x1a, 0x3f, 0x08, 0x55, 0xa4, 0x19, 0x3c, 0xb3, 0xb7, 0xe6, 0xce, 0xfe, 0xe3, 0x57, 0xee, 0x3f,
	0x41, 0xd6, 0x7b, 0x88, 0x54, 0xf0, 0x0c, 0xf9, 0x95, 0x15, 0x48, 0xde, 0x01, 0x18, 0x69, 0xbd,
	0xf7, 0xd8, 0xb9, 0x27, 0x0a, 0xcc, 0x5f, 0xdc, 0x81, 0xbe, 0x8d, 0xf5, 0x37, 0x98, 0x58, 0x1b,
	0x7f, 0x15, 0xf7, 0x10, 0x9b, 0xae, 0xee, 0x07, 0x99, 0x3a, 0x2a, 0x96, 0xce, 0xd3, 0x7f, 0xd1,
	0xfe, 0x80, 0xa3, 0xaf, 0x8f, 0xdf, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0x47, 0xd1, 0xf4, 0x8f,
	0x97, 0x03, 0x00, 0x00,
}
